<?php

namespace Tests\Feature;

use App\Models\Inventory;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Tests\TestCase;

class InventoryControllerTest extends TestCase
{
    use DatabaseMigrations;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Inventory::factory()->create([
            'type' => 'Purchase',
            'quantity' => 1,
            'unit_price' => 10.00
        ]);

        Inventory::factory()->create([
            'type' => 'Purchase',
            'quantity' => 2,
            'unit_price' => 20.00
        ]);

        Inventory::factory()->create([
            'type' => 'Purchase',
            'quantity' => 2,
            'unit_price' => 15.00
        ]);
    }

    /** @test */
    public function it_can_store_the_quantity_request_value()
    {
        $this->withoutExceptionHandling();

        $response = $this->post('/inventories', [
            'quantity' => 2
        ]);

        $data = json_decode($response->getContent(), true);
        $response->assertStatus(200);

        tap(Inventory::latest('id')->first(), function ($inventory) {
            $this->assertEquals(-2, $inventory->quantity);
            $this->assertEquals('Application', $inventory->type);
        });
        $this->assertEquals(30., $data['valuation']);
        $this->assertEquals(3., $data['total_units']);
    }

    /** @test */
    public function it_cannot_process_wrong_quantity()
    {
        $response = $this->json('POST', '/inventories', [
            'quantity' => null
        ]);

        $data = json_decode($response->getContent(), true);

        $response->assertStatus(422);
        $this->assertEquals('The quantity field is required.', $data['errors']['quantity'][0]);
    }

    /** @test */
    public function it_cannot_process_amount_more_than_the_stock()
    {
        $response = $this->json('POST', '/inventories', [
            'quantity' => 50000
        ]);

        $data = json_decode($response->getContent(), true);

        $response->assertStatus(400);
        $this->assertEquals('Requested quantity is more than the total', $data['message']);
    }
}
